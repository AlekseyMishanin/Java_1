package ru.mylife.AnimalHomeWork;

/*
1. Создать классы Собака и Кот с наследованием от класса Животное.
2. Животные могут выполнять действия: бежать, плыть, перепрыгивать препятствие. В качестве параметра каждому методу
передается величина, означающая или длину препятствия (для бега и плавания), или высоту (для прыжков).
3. У каждого животного есть ограничения на действия (бег: кот 200 м., собака 500 м.; прыжок: кот 2 м., собака 0.5 м.;
плавание: кот не умеет плавать, собака 10 м.).
4. При попытке животного выполнить одно из этих действий, оно должно сообщить результат в консоль. (Например,
dog1.run(150); -> результат: run: true)
5. * Добавить животным разброс в ограничениях. То есть у одной собаки ограничение на бег может быть 400 м., у другой 600 м.
*/

/*
Решение:
1. Создал классы Cat и Dog с наследованием от класса Animal
2. В классе Animal объявил абстрактные методы run(int)/swim(int)/jump(double), которые сообщают о том, что в животные
могут бегать/плавать/прыгать, но не объясняют как они это делают
3. Ограничения на дальность бега, высоту прыжка, дальность плавания организованы
в виде набора констант завернутых в интерфейс. Классы Cat и Dog реализуют соответствующие интерфейсы.
4. В классах Cat и Dog переопределил абстрактные методы суперкласса. Аргумент переданный методу сравнивается с
константой интерфейса. Результат сравнения возвращается методом.
5. Создал классы Bulldog и Azawak с наследованием от класса Dog. В классах Bulldog и Azawak
переопределил все методы родительского класса с учетом новых ограничений, реализованных также в виде интерфейса с набором констант
*/
public class Main {

    public static void main(String[] args) {

        Cat cat = new Cat("Барсик");
        cat.printClass();
        System.out.println("Имя: " + cat.getName() + "\n"
                            + "Run (100m)- " + cat.run(100) + "\n"
                            + "Swim (1m) - " + cat.swim(1) + "\n"
                            + "Jump (3m) - " + cat.jump(3.0) + "\n");

        Dog dog = null;
        dog = new Dog("Дворняга");
        dog.printClass();
        System.out.println("Имя: " + dog.getName() + "\n"
                +"Run (400m)- " + dog.run(400) + "\n"
                + "Swim (9m) - " + dog.swim(9) + "\n"
                + "Jump (0.3m) - " + dog.jump(0.3) + "\n");

        dog = new Bulldog("Боксер");
        dog.printClass();
        System.out.println("Имя: " + dog.getName() + "\n"
                +"Run (400m)- " + dog.run(400) + "\n"
                + "Swim (9m) - " + dog.swim(9) + "\n"
                + "Jump (0.3m) - " + dog.jump(0.3) + "\n");

        dog = new Azawak("Спринтер");
        dog.printClass();
        System.out.println("Имя: " + dog.getName() + "\n"
                +"Run (400m)- " + dog.run(400) + "\n"
                + "Swim (9m) - " + dog.swim(9) + "\n"
                + "Jump (0.3m) - " + dog.jump(0.3) + "\n");

    }
}
